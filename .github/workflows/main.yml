- name: Send Data to Supabase
  env:
    SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
    SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
  run: |
    echo '::group::Enviando dados ao Supabase'

    curl -X POST \
      "${SUPABASE_URL}/rest/v1/pr_metrics" \
      -H "apikey: ${SUPABASE_SERVICE_ROLE_KEY}" \
      -H "Authorization: Bearer ${SUPABASE_SERVICE_ROLE_KEY}" \
      -H "Content-Type: application/json" \
      -H "Prefer: return=representation" \
      -d "$(jq -n \
        --arg pr_number "${{ steps.pr_info.outputs.pr_number }}" \
        --arg pr_title "${{ steps.pr_info.outputs.pr_title }}" \
        --arg pr_status "${{ steps.pr_info.outputs.pr_status }}" \
        --arg developer_name "${{ steps.pr_info.outputs.developer_name }}" \
        --arg developer_email "${{ steps.pr_info.outputs.developer_email }}" \
        --arg created_at "${{ steps.pr_info.outputs.created_at }}" \
        --arg merged_at "${{ steps.pr_info.outputs.merged_at }}" \
        --argjson ai_tools '${{ steps.pr_info.outputs.ai_tools }}' \
        --arg repository "${{ steps.pr_info.outputs.repository }}" \
        '{
          pr_number: ($pr_number | tonumber),
          pr_title: $pr_title,
          pr_status: $pr_status,
          developer_name: $developer_name,
          developer_email: $developer_email,
          created_at: $created_at,
          merged_at: ($merged_at == "" or $merged_at == "null" ? null : $merged_at),
          ai_tools: $ai_tools,
          repository: $repository
        }')"

    echo '::endgroup::'
